if(row$op=='B'){
amount<-floor(cash/row$Value)
cash<-cash-amount*row$Value
}
if(row$op=='S'){
cash<-cash+amount*row$Value
amount<-0
}
row$cash<-cash #现金
row$amount<-amount #持股数量
row$asset<-cash+amount*row$Value # 资产总值
ticks<-rbind(ticks,row)
}
ticks$diff<-c(0,diff(ticks$asset)) # 资产总值差
#赚钱的操作
rise<-ticks[c(which(ticks$diff>0)-1,which(ticks$diff>0)),]
rise<-rise[order(row.names(rise)),]
#赔钱的操作
fall<-ticks[c(which(ticks$diff<0)-1,which(ticks$diff<0)),]
fall<-fall[order(row.names(fall)),]
return(list(
ticks=ticks,
rise=rise,
fall=fall
))
}
source(file="tools.r",encoding="UTF-8")
#################################
# 下载数据
#################################
stock<-"IBM"
download(stock,from='2010-01-01')
IBM<-read(stock)
head(IBM)
chartSeries(IBM)
chartSeries(IBM,TA = "addVo(); addSMA(); addEnvelope();addMACD(); addMomentum(); addROC()")
cdata<-IBM['2010/2012']$Close
title<-"Stock_IBM" #图片标题
sDate<-as.Date("2010-1-1") #开始日期
eDate<-as.Date("2012-1-1") #结束日期
#################################
# 均线图
#################################
ldata<-ma(cdata,c(5,20,60))  #选择滑动平均指标
drawLine(ldata,title,sDate,eDate) #画图
##################################################################
# 一条均线: 当股价上穿均线买入(红色)，下穿均线卖出(蓝色)
##################################################################
ldata<-ma(cdata,c(20))  #选择滑动平均指标
drawLine(ldata,title,sDate,eDate) #画图
pdata<-merge(ldata$ma20[which(ldata$Value-ldata$ma20>0)],ldata$ma20[which(ldata$Value-ldata$ma20<0)])
names(pdata)<-c("down","up")
pdata<-fortify(pdata,melt=TRUE)
pdata<-pdata[-which(is.na(pdata$Value)),]
drawPoint(ldata,pdata,title,sDate,eDate) #画图
tdata<-Signal(cdata,pdata)
tdata<-tdata[which(as.Date(row.names(tdata))<eDate),]
result1<-trade(tdata,100000)
result1$ticks
result1$rise
result1$fall
adata<-as.xts(result1$ticks[which(result1$ticks$op=='S'),]['cash'])
drawCash(ldata,adata,title,sDate,eDate)
##################################################################
# 二条均线: 当短均线ma5上穿长均线ma20买入(红色)，短均线ma5下穿长均线ma20卖出(蓝色)
##################################################################
ldata<-ma(cdata,c(5,20))  #选择滑动平均指标
drawLine(ldata,title,sDate,eDate) #画图
pdata<-merge(ldata$ma20[which(ldata$ma5-ldata$ma20>0)],ldata$ma20[which(ldata$ma5-ldata$ma20<0)])
names(pdata)<-c("down","up")
pdata<-fortify(pdata,melt=TRUE)
pdata<-pdata[-which(is.na(pdata$Value)),]
drawPoint(ldata,pdata,title,sDate,eDate) #画图
tdata<-Signal(cdata,pdata)
tdata<-tdata[which(as.Date(row.names(tdata))<eDate),]
result2<-trade(tdata,100000)
result2$ticks
result2$rise
result2$fall
adata<-as.xts(result2$ticks[which(result2$ticks$op=='S'),]['cash'])
drawCash(ldata,adata,title,sDate,eDate)
##################################################################
# 比较操作:一条均线 和 二条均线
##################################################################
#盈利
rise<-merge(as.xts(result1$rise[1]),as.xts(result2$rise[1]))
names(rise)<-c("plan1","plan2")
#亏损
fall<-merge(as.xts(result1$fall[1]),as.xts(result2$fall[1]))
names(fall)<-c("plan1","plan2")
#盈利区间
yrng <-range(ldata$Value)
plan1<-as.xts(result1$rise[c(1,2)])
plan1<-data.frame(start=as.Date(index(plan1)[which(plan1$op=='B')]),end=as.Date(index(plan1)[which(plan1$op=='S')]),plan='plan1')
plan2<-as.xts(result2$rise[c(1,2)])
plan2<-data.frame(start=as.Date(index(plan2)[which(plan2$op=='B')]),end=as.Date(index(plan2)[which(plan2$op=='S')]),plan='plan2')
plan<-rbind(plan1,plan2)
drawRange(ldata,plan,title,sDate,eDate) #画图
ldata<-ma(cdata,c(5,20,60))  #选择滑动平均指标
drawLine(ldata,title,sDate,eDate) #画图
ldata<-ma(cdata,c(20))  #选择滑动平均指标
drawLine(ldata,title,sDate,eDate) #画图
pdata<-merge(ldata$ma20[which(ldata$Value-ldata$ma20>0)],ldata$ma20[which(ldata$Value-ldata$ma20<0)])
names(pdata)<-c("down","up")
pdata<-fortify(pdata,melt=TRUE)
pdata<-pdata[-which(is.na(pdata$Value)),]
drawPoint(ldata,pdata,title,sDate,eDate) #画图
ldata<-ma(cdata,c(20))  #选择滑动平均指标
drawLine(ldata,title,sDate,eDate) #画图
pdata<-merge(ldata$ma20[which(ldata$Value-ldata$ma20>0)],ldata$ma20[which(ldata$Value-ldata$ma20<0)])
names(pdata)<-c("down","up")
pdata<-fortify(pdata,melt=TRUE)
pdata<-pdata[-which(is.na(pdata$Value)),]
drawPoint(ldata,pdata,title,sDate,eDate) #画图
tdata<-Signal(cdata,pdata)
tdata<-tdata[which(as.Date(row.names(tdata))<eDate),]
result1<-trade(tdata,100000)
result1$ticks
result1$rise
result1$fall
adata<-as.xts(result1$ticks[which(result1$ticks$op=='S'),]['cash'])
drawCash(ldata,adata,title,sDate,eDate)
ldata<-ma(cdata,c(5,20))  #选择滑动平均指标
drawLine(ldata,title,sDate,eDate) #画图
pdata<-merge(ldata$ma20[which(ldata$ma5-ldata$ma20>0)],ldata$ma20[which(ldata$ma5-ldata$ma20<0)])
names(pdata)<-c("down","up")
pdata<-fortify(pdata,melt=TRUE)
pdata<-pdata[-which(is.na(pdata$Value)),]
drawPoint(ldata,pdata,title,sDate,eDate) #画图
tdata<-Signal(cdata,pdata)
tdata<-tdata[which(as.Date(row.names(tdata))<eDate),]
result2$ticks
result2$rise
result2$fall
adata<-as.xts(result2$ticks[which(result2$ticks$op=='S'),]['cash'])
drawCash(ldata,adata,title,sDate,eDate)
rise<-merge(as.xts(result1$rise[1]),as.xts(result2$rise[1]))
names(rise)<-c("plan1","plan2")
#亏损
fall<-merge(as.xts(result1$fall[1]),as.xts(result2$fall[1]))
names(fall)<-c("plan1","plan2")
yrng <-range(ldata$Value)
plan1<-as.xts(result1$rise[c(1,2)])
plan1<-data.frame(start=as.Date(index(plan1)[which(plan1$op=='B')]),end=as.Date(index(plan1)[which(plan1$op=='S')]),plan='plan1')
plan2<-as.xts(result2$rise[c(1,2)])
plan2<-data.frame(start=as.Date(index(plan2)[which(plan2$op=='B')]),end=as.Date(index(plan2)[which(plan2$op=='S')]),plan='plan2')
plan<-rbind(plan1,plan2)
drawRange(ldata,plan,title,sDate,eDate) #画图
plan<-rbind(plan1)
drawRange(ldata,plan,title,sDate,eDate) #画图
plan<-rbind(plan1,plan2)
drawRange(ldata,plan,title,sDate,eDate) #画图
rm(list=ls())
setwd("D:/doc/meeting/51cto/code")
source(file="tools.r",encoding="UTF-8")
#################################
# 下载数据
#################################
stock<-"IBM"
download(stock,from='2010-01-01')
IBM<-read(stock)
head(IBM)
chartSeries(IBM)
chartSeries(IBM,TA = "addVo(); addSMA(); addEnvelope();addMACD(); addMomentum(); addROC()")
cdata<-IBM['2010/2012']$Close
title<-"Stock_IBM" #图片标题
sDate<-as.Date("2010-1-1") #开始日期
eDate<-as.Date("2012-1-1") #结束日期
#################################
# 均线图
#################################
ldata<-ma(cdata,c(5,20,60))  #选择滑动平均指标
drawLine(ldata,title,sDate,eDate) #画图
##################################################################
# 一条均线: 当股价上穿均线买入(红色)，下穿均线卖出(蓝色)
##################################################################
ldata<-ma(cdata,c(20))  #选择滑动平均指标
drawLine(ldata,title,sDate,eDate) #画图
pdata<-merge(ldata$ma20[which(ldata$Value-ldata$ma20>0)],ldata$ma20[which(ldata$Value-ldata$ma20<0)])
names(pdata)<-c("down","up")
pdata<-fortify(pdata,melt=TRUE)
pdata<-pdata[-which(is.na(pdata$Value)),]
drawPoint(ldata,pdata,title,sDate,eDate) #画图
tdata<-Signal(cdata,pdata)
tdata<-tdata[which(as.Date(row.names(tdata))<eDate),]
result1<-trade(tdata,100000)
result1$ticks
result1$rise
result1$fall
adata<-as.xts(result1$ticks[which(result1$ticks$op=='S'),]['cash'])
drawCash(ldata,adata,title,sDate,eDate)
##################################################################
# 二条均线: 当短均线ma5上穿长均线ma20买入(红色)，短均线ma5下穿长均线ma20卖出(蓝色)
##################################################################
ldata<-ma(cdata,c(5,20))  #选择滑动平均指标
drawLine(ldata,title,sDate,eDate) #画图
pdata<-merge(ldata$ma20[which(ldata$ma5-ldata$ma20>0)],ldata$ma20[which(ldata$ma5-ldata$ma20<0)])
names(pdata)<-c("down","up")
pdata<-fortify(pdata,melt=TRUE)
pdata<-pdata[-which(is.na(pdata$Value)),]
drawPoint(ldata,pdata,title,sDate,eDate) #画图
tdata<-Signal(cdata,pdata)
tdata<-tdata[which(as.Date(row.names(tdata))<eDate),]
result2<-trade(tdata,100000)
result2$ticks
result2$rise
result2$fall
adata<-as.xts(result2$ticks[which(result2$ticks$op=='S'),]['cash'])
drawCash(ldata,adata,title,sDate,eDate)
##################################################################
# 比较操作:一条均线 和 二条均线
##################################################################
#盈利
rise<-merge(as.xts(result1$rise[1]),as.xts(result2$rise[1]))
names(rise)<-c("plan1","plan2")
#亏损
fall<-merge(as.xts(result1$fall[1]),as.xts(result2$fall[1]))
names(fall)<-c("plan1","plan2")
#盈利区间
yrng <-range(ldata$Value)
plan1<-as.xts(result1$rise[c(1,2)])
plan1<-data.frame(start=as.Date(index(plan1)[which(plan1$op=='B')]),end=as.Date(index(plan1)[which(plan1$op=='S')]),plan='plan1')
plan2<-as.xts(result2$rise[c(1,2)])
plan2<-data.frame(start=as.Date(index(plan2)[which(plan2$op=='B')]),end=as.Date(index(plan2)[which(plan2$op=='S')]),plan='plan2')
plan<-rbind(plan1)
drawRange(ldata,plan,title,sDate,eDate) #画图plan1
plan<-rbind(plan1,plan2)
drawRange(ldata,plan,title,sDate,eDate) #画图plan2
#################################
stock<-"AAPL"
#download(stock,from='2010-01-01')
AAPL<-read(stock)
head(AAPL)
chartSeries(AAPL)
chartSeries(AAPL,TA = "addVo(); addSMA(); addEnvelope();addMACD(); addMomentum(); addROC()")
chartSeries(AAPL)
cdata<-AAPL['2010/2014']$Close
title<-"Stock_AAPL" #图片标题
sDate<-as.Date("2010-1-1") #开始日期
eDate<-as.Date("2014-1-1") #结束日期
ldata<-ma(cdata,c(5,20,60))  #选择滑动平均指标
drawLine(ldata,title,sDate,eDate) #画图
ldata<-ma(cdata,c(20))  #选择滑动平均指标
drawLine(ldata,title,sDate,eDate) #画图
pdata<-merge(ldata$ma20[which(ldata$Value-ldata$ma20>0)],ldata$ma20[which(ldata$Value-ldata$ma20<0)])
names(pdata)<-c("down","up")
pdata<-fortify(pdata,melt=TRUE)
pdata<-pdata[-which(is.na(pdata$Value)),]
drawPoint(ldata,pdata,title,sDate,eDate) #画图
tdata<-Signal(cdata,pdata)
tdata<-tdata[which(as.Date(row.names(tdata))<eDate),]
result1<-trade(tdata,100000)
adata<-as.xts(result1$ticks[which(result1$ticks$op=='S'),]['cash'])
drawCash(ldata,adata,title,sDate,eDate)
ldata<-ma(cdata,c(5,20))  #选择滑动平均指标
drawLine(ldata,title,sDate,eDate) #画图
pdata<-merge(ldata$ma20[which(ldata$ma5-ldata$ma20>0)],ldata$ma20[which(ldata$ma5-ldata$ma20<0)])
names(pdata)<-c("down","up")
pdata<-fortify(pdata,melt=TRUE)
pdata<-pdata[-which(is.na(pdata$Value)),]
drawPoint(ldata,pdata,title,sDate,eDate) #画图
tdata<-Signal(cdata,pdata)
tdata<-tdata[which(as.Date(row.names(tdata))<eDate),]
result2<-trade(tdata,100000)
adata<-as.xts(result2$ticks[which(result2$ticks$op=='S'),]['cash'])
drawCash(ldata,adata,title,sDate,eDate)
#盈利
rise<-merge(as.xts(result1$rise[1]),as.xts(result2$rise[1]))
names(rise)<-c("plan1","plan2")
#亏损
fall<-merge(as.xts(result1$fall[1]),as.xts(result2$fall[1]))
names(fall)<-c("plan1","plan2")
#盈利区间
yrng <-range(ldata$Value)
plan1<-as.xts(result1$rise[c(1,2)])
plan1<-data.frame(start=as.Date(index(plan1)[which(plan1$op=='B')]),end=as.Date(index(plan1)[which(plan1$op=='S')]),plan='plan1')
plan2<-as.xts(result2$rise[c(1,2)])
plan2<-data.frame(start=as.Date(index(plan2)[which(plan2$op=='B')]),end=as.Date(index(plan2)[which(plan2$op=='S')]),plan='plan2')
plan<-rbind(plan1)
drawRange(ldata,plan,title,sDate,eDate) #画图plan1
plan<-rbind(plan1,plan2)
drawRange(ldata,plan,title,sDate,eDate) #画图plan2
#盈利
rise<-merge(as.xts(result1$rise[1]),as.xts(result2$rise[1]))
names(rise)<-c("plan1","plan2")
#亏损
fall<-merge(as.xts(result1$fall[1]),as.xts(result2$fall[1]))
names(fall)<-c("plan1","plan2")
yrng <-range(ldata$Value)
plan1<-as.xts(result1$rise[c(1,2)])
plan1<-data.frame(start=as.Date(index(plan1)[which(plan1$op=='B')]),end=as.Date(index(plan1)[which(plan1$op=='S')]),plan='plan1')
plan2<-as.xts(result2$rise[c(1,2)])
plan2<-data.frame(start=as.Date(index(plan2)[which(plan2$op=='B')]),end=as.Date(index(plan2)[which(plan2$op=='S')]),plan='plan2')
plan<-rbind(plan1)
drawRange(ldata,plan,title,sDate,eDate) #画图plan1
plan<-rbind(plan1,plan2)
drawRange(ldata,plan,title,sDate,eDate) #画图plan2
#本地读数据
read<-function(stock){
as.xts(read.zoo(file=paste(stock,".csv",sep=""),header = TRUE,sep=",", format="%Y-%m-%d"))
}
#下载数据
download<-function(stock,from="2010-01-01"){
df<-getSymbols(stock,from=from,env=environment(),auto.assign=FALSE)  #下载数据
names(df)<-c("Open","High","Low","Close","Volume","Adjusted")
write.zoo(df,file=paste(stock,".csv",sep=""),sep=",",quote=FALSE) #保存到本地
}
IBM<-read(stock)
IBM
head(IBM)
head(IBM)
chartSeries(IBM)
chartSeries(IBM,TA = "addVo(); addSMA(); addEnvelope();addMACD(); addMomentum(); addROC()")
IBM<-IBM['2010/2014']
chartSeries(IBM,TA = "addVo(); addSMA(); addEnvelope();addMACD(); addMomentum(); addROC()")
IBM<-IBM['2010/2013']
chartSeries(IBM,TA = "addVo(); addSMA(); addEnvelope();addMACD(); addMomentum(); addROC()")
stock<-"IBM"
#download(stock,from='2010-01-01')
IBM<-read(stock)
head(IBM)
IBM<-IBM['2010/2014-06']
chartSeries(IBM,TA = "addVo(); addSMA(); addEnvelope();addMACD(); addMomentum(); addROC()")
source(file="tools.r",encoding="UTF-8")
#################################
# 下载数据
#################################
stock<-"IBM"
#download(stock,from='2010-01-01')
IBM<-read(stock)
head(IBM)
IBM<-IBM['2010/2014-06']
chartSeries(IBM)
IBM
head(IBM)
download<-function(stock,from="2010-01-01"){
df<-getSymbols(stock,from=from,env=environment(),auto.assign=FALSE)  #下载数据
names(df)<-c("Open","High","Low","Close","Volume","Adjusted")
write.zoo(df,file=paste(stock,".csv",sep=""),sep=",",quote=FALSE) #保存到本地
}
#本地读数据
read<-function(stock){
as.xts(read.zoo(file=paste(stock,".csv",sep=""),header = TRUE,sep=",", format="%Y-%m-%d"))
}
IBM<-read(stock)
IBM
IBM
head(IBM
)
IBM<-IBM['2010/2014-06']
chartSeries(IBM)
chartSeries(IBM,TA = "addVo(); addSMA(); addEnvelope();addMACD(); addMomentum(); addROC()")
cdata<-IBM['2010/2012']$Close
title<-"Stock_IBM" #图片标题
sDate<-as.Date("2010-1-1") #开始日期
eDate<-as.Date("2012-1-1") #结束日期
ldata<-ma(cdata,c(5,20,60))  #选择滑动平均指标
drawLine(ldata,title,sDate,eDate) #画图
ldata<-ma(cdata,c(20))  #选择滑动平均指标
drawLine(ldata,title,sDate,eDate) #画图
pdata<-merge(ldata$ma20[which(ldata$Value-ldata$ma20>0)],ldata$ma20[which(ldata$Value-ldata$ma20<0)])
names(pdata)<-c("down","up")
pdata<-fortify(pdata,melt=TRUE)
pdata<-pdata[-which(is.na(pdata$Value)),]
drawPoint(ldata,pdata,title,sDate,eDate) #画图
tdata<-Signal(cdata,pdata)
tdata<-tdata[which(as.Date(row.names(tdata))<eDate),]
result1<-trade(tdata,100000)
result1$ticks
result1$rise
setwd("D:/workspace/project/investment/COSinvestment")
setwd("D:/workspace/R/app/gridgame")
setwd("D:/workspace/R/app/gridgame")
plot(sample_xts[,1:4], layout.screens = matrix(c(1,1,1,1,2,3,4,4),ncol = 2, byrow = TRUE))
library(zoo)
plot(sample_xts[,1:4], layout.screens = matrix(c(1,1,1,1,2,3,4,4),ncol = 2, byrow = TRUE))
library(xts)
plot(sample_xts[,1:4], layout.screens = matrix(c(1,1,1,1,2,3,4,4),ncol = 2, byrow = TRUE))
sample_xts
data(sample_matrix)
> sample_xts <- as.xts(sample_matrix)
data(sample_matrix)
sample_xts <- as.xts(sample_matrix)
sample_xts
plot(sample_xts[,1:4], layout.screens = matrix(c(1,1,1,1,2,3,4,4),ncol = 2, byrow = TRUE))
plot(sample_xts[,1:4], layout.screens = matrix(c(1,1,1,1,2,3,4,4),ncol = 2, byrow = TRUE))
plot(sample_xts[,1:4], layout.screens = matrix(c(1,1,1,1,2,3,4,4),ncol = 2, byrow = TRUE))
plot(sample_xts[,1:4], layout.screens = matrix(c(1,1,1,1,2,3,4,4),ncol = 2, byrow = TRUE))
sample_xts
install.packages("xtsExtra")
install.packages("xtsExtra", repos="http://R-Forge.R-project.org")
library("xtsExtra")
plot(sample_xts[,1:4], layout.screens = matrix(c(1,1,1,1,2,3,4,4),ncol = 2, byrow = TRUE))
setwd("D:/workspace/project/investment/COSinvestment")
setwd("D:/workspace/project/investment/COSinvestment/plan")
setwd("D:/workspace/R/app/gridgame")
d<-seq(1,10,2);d
any(d<0);all(d<0)
any(d<5);all(d<5)
quantile
?quantile
quantile(x <- rnorm(1001))
fivenum(x <- rnorm(1001))
?fivenum
?weibull
？pweibull
?pweibull
setwd("D:/bigdata/airui")
a<-read.table(file="a.csv",header=FALSE)
head(a)
install.packages("arule")
install.packages("arules")
library(arules)
data(Groceries)
class(Groceries)
head(Groceries)
Groceries
frequentsets=eclat(Groceries,parameter=list(support=0.05,maxlen=10))  #求频繁项集
inspect(frequentsets[1:10])    #察看求得的频繁项集
inspect(sort(frequentsets,by="support")[1:10])    #根据支持度对求得的频繁项集排序并察看（等价于inspect(sort(frequentsets)[1:10]）
rules=apriori(Groceries,parameter=list(support=0.01,confidence=0.01))    #求关联规则
summary(rules)    #察看求得的关联规则之摘要
x=subset(rules,subset=rhs%in%"whole milk"&lift>=1.2)    #求所需要的关联规则子集
inspect(sort(x,by="support")[1:5])    #根据支持度对求得的关联规则子集排序并察看
op<-read.table(file="op.csv",header=FALSE)
head(op)
op<-read.csv(file="op.csv",header=FALSE)
head(op)
names(op)<-c("order","prod")
head(op)
table(op$order)
unique(op$order)
length(unique(op$order))
nrow(op)
Groceries
inspect(Groceries)
head(inspect(Groceries))
freq<-eclat(op,parameter=list(support=0.1,maxlen=10))
eclat
?
eclat
data("Adult")
Adult
a_df <- data.frame(
age = as.factor(c(6,8,7,6,9,5)),
grade = as.factor(c(1,3,1,1,4,1)))
## note: all attributes have to be factors
a_df
trans3 <- as(a_df, "transactions")
image(trans3)
trans3
head(op)
op<-data.frame(as.factor(op$order),as.factor(op$prod))
head(op)
op<-data.frame(as.factor(op$order),as.factor(op$prod))
names(op)<-c("order","prod")
head(op)
op
op<-read.csv(file="op.csv",header=FALSE)
names(op)<-c("order","prod")
op<-data.frame(as.factor(op$order),as.factor(op$prod))
names(op)<-c("order","prod")
head(op)
op$order
op<-read.csv(file="op.csv",header=FALSE)
head(op)
?read.csv
op<-read.csv(file="op.csv",as.is=factor,header=FALSE)
op<-read.csv(file="op.csv",stringsAsFactors=factor,header=FALSE)
op<-read.csv(file="op.csv",stringsAsFactors=factor(),header=FALSE)
factor
data<-read.csv(file="op.csv",header=FALSE)
data<-data.frame(as.factor(op$V1),as.factor(op$V2))
head(data)
df<-read.csv(file="op.csv",header=FALSE)
df<-data.frame(as.factor(df$V1),as.factor(df$V2))
names(df)<-c("order","prod")
head(df)
df$order
length(head(df))
length(head(df$order))
length(df$order)
length(level(df$order))
level(df$order)
levels(df$order)
length(levels(df$order))
length(levels(df$order))
trans <- as(df, "transactions")
trans
length(levels(df$prod))
eclat(trans)
length(levels(df$prod))
trans
a_df3 <- data.frame(TID = c(1,1,2,2,2,3), item=c("a","b","a","b","c", "b"))
a_df3
trans4 <- as(split(a_df3[,"item"], a_df3[,"TID"]), "transactions")
trans4
LIST(trans4)
head(df)
LIST(trans)
df<-read.csv(file="op.csv",header=FALSE)
df<-data.frame(as.factor(df$V1),as.factor(df$V2))
names(df)<-c("order","item")
# 记录数87735
nrow(df)
# 商品数47385
length(levels(df$item))
# 订单数52573
length(levels(df$order))
split(df[,"item"], df[,"order"])
trans<- as(split(df[,"item"], df[,"order"]), "transactions")
rm(list=ls())
